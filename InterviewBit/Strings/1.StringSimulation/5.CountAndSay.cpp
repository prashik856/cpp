/*
Problem Description

The count-and-say sequence is the sequence of integers beginning as follows: 
1, 11, 21, 1211, 111221, ...
1 is read off as one 1 or 11. 11 is read off as two 1s or 21.
21 is read off as one 2, then one 1 or 1211.

Given an integer n, generate the nth sequence.

Note: The sequence of integers will be represented as a string.

Example:

if n = 2, the sequence is 11.
*/
/*
Solution approach:
https://www.geeksforgeeks.org/look-and-say-sequence/

How is above sequence generated? 
n’th term in generated by reading (n-1)’th term.
The first term is "1"
Second term is "11", generated by reading first term as "One 1" 
(There is one 1 in previous term)
Third term is "21", generated by reading second term as "Two 1"
Fourth term is "1211", generated by reading third term as "One 2 One 1" 
and so on

How to find n’th term? 

*/
/*
Got my logic correct.
We first find the count of the given number, and then replace that number with str(count) + str(number)

Repeat this a times.
*/


#include<bits/stdc++.h>
using namespace std;

string solve(int a){
    if(a == 1){
        return "1";
    }
    if(a == 2){
        return "11";
    }
    string temp = "11";
    for(int i=3; i<=a; i++){
        char value = temp[0];
        int count = 1;
        string temp2 = "";
        for(int j=1; j<temp.size(); j++){
            if(temp[j] == temp[j-1]){
                count++;
                if(j == temp.size() - 1){
                    temp2 = temp2 + to_string(count);
                    temp2.push_back(value);
                    // cout << temp2 << endl;
                }
            } else {
                // put it in our new string
                temp2 = temp2 + to_string(count);
                temp2.push_back(value);
                // cout << temp2 << endl;

                count = 1;
                value = temp[j];

                if(j == temp.size() - 1){
                    temp2 = temp2 + to_string(count);
                    temp2.push_back(value);
                    // cout << temp2 << endl;
                }
            }
        }
        temp = temp2;
        // cout << i << ": " << temp << endl;
    }
    return temp;
}

int main(){
    int a = 20;
    string result = solve(a);
    cout << "Result is: " << result << endl;
    return 0;
}