/*
Find if Given number is power of 2 or not. 

More specifically, find if given number can be expressed as 2^k where k >= 1.

Input:

number length can be more than 64, which mean number can be greater than 2 ^ 64 (out of long long range)
Output:

return 1 if the number is a power of 2 else return 0

Example:

Input : 128
Output : 1
*/
/*
Solution TLE for really big number.
so is the editorial solution.
man, fuck you IB.
*/
#include<bits/stdc++.h>
using namespace std;

string multiply(string num, string by){
    int n = num.length();
    // cout << "Input length: " << n << endl;

    int byNum = stoi(by);

    string result = "";
    for(int i=0; i<n+1; i++){
        result.push_back('0');
    }

    int carry = 0;
    int placeValue = 0;
    int index = n;
    for(int i=n-1; i>=0; i--){
        string temp = "";
        temp.push_back(num[i]);
        int tempNum = stoi(temp);

        int multiply = tempNum * byNum;
        multiply += carry;

        placeValue = multiply % 10;
        string place = to_string(placeValue);
        result[index] = place[0];
        index--;

        carry = multiply/10;
        placeValue = 0;
    }
    placeValue = carry;
    string place = to_string(placeValue);
    result[index] = place[0];
    index--;

    if(result[0] == '0'){
        string newResult = "";
        index = 0;
        while(result[index] == '0'){
            index++;
        }
        for(int i=index; i<n+1; i++){
            newResult.push_back(result[i]);
        }
        // cout << "Multiplication Result: " << newResult << endl;
        return newResult;
    } else {
        // cout << "Multiplication Result: " << result << endl;
        return result;
    }

    return result;
}

int solve(string a){
    int result = 0;
    if(a.compare("0") == 0 || a.compare("1") == 0){
        return 0;
    }
    if(a.compare("2") == 0){
        return 1;
    }
    // cout << "Input length: " << a.length() << endl;

    string num = "2";

    string temp = num;
    while(temp.length() <= a.length()){
        // cout << "Input is: " << temp << endl;
        temp = multiply(temp, "2");
        int value = a.compare(temp);
        if(value == 0){
            return 1;
        }
        // cout << "Current Temp value: " << temp << endl;
        // cout << "Length of temp: " << temp.length() << endl;
        // cout << endl;
    }

    return result;
}

int main(){
    string a = "7447679294409787480206587789773063224874723526480656600645239021332725569389903878951667543615703918753129506900980203714208079402799323746713156442298258183591232593562677919072352412656699450457259585447005969677420802979676427092284318330396591211358824862443498854309844685937556058125862110520808947535374651305305936818423877801169236849918307016405936841752117571388469572838586449672973875781265772221612448759079976777529012844276302728841298661521468653593405041560260586203853414552904922284348612361904023324137855484894398173469760509485285231742401176940942222746604776698083022836933008589078850584609594645090461577321027067679416855234620545817913118082155701260636482757796187299061107975484338900505156698569044536746131809558117989804901177121238369332474189727431336088429197973230571546200140433399250155474192816443797068031379579685218897756929120121936131786223448086475289855901486253561865904375769332087624058484380530086675086178189592889236889541817011240437079980165223638995613940494260765613848503097016375861467352796371770679052937991023183691129473661565633314463764350748672570814277913322558112668773732422174521906354805394022174271007163156470870640610966937215956331590961476145170866509843572581513903612945705134839611415303334090740884121053669193851409567352590290332073545902296968894880502439409478200434142439353187383542161325620613346016118629703410730467995060275915882042674306819029375879601886466473950124869694432504993224197381648798809300868185140852997143384615901255912970700013611851296484643503714434473340024868206849040780522948332070525399266679716636706671473669415467622055342219997850549925370885603902558017930866837536623424105053217081043546963241148632129208333555565786207628794677893280457486872553774642379645864938939771642889796180977831901280174776677046806726624593448820682131977124610307414838679069664509010953749943175640879387345993072124629047171436920269181796739656923705847966803369484040946354386717369970975646461462845282972863951983604404653224306178274506124795237483630449325933887335383834472309920871571562132466413400160588464872911714931271781294545688190028625708541188889103250712750944147093283419753835958566604796315170634837620599828031531501499472721769874836512482588189212503607372243616834488611994002470043210969728620578423395885128832526998409632767233625642528701060685224951175826281625741609381906513868836274919572537732497164750064301070377193292393951960664973613875650512469553772619685898652596146563935217886038259573704156521920282529477832565005940211744168659463108879495932358289550047178958288609176078524888583643604843362245782030854622635557345494267201564827700849545827897262997504";
    int result = solve(a);
    cout << "Result is: " << result << endl;
    return 0;
}